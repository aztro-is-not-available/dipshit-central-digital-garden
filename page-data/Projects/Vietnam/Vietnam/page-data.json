{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Projects/Vietnam/Vietnam",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Vietnam is a project involving trips into \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Locations/The_Central_Woods\",\n    \"title\": \"The_Central_Woods\"\n  }, \"[[The_Central_Woods]]\"), \" and its surroundings.\"), mdx(\"p\", null, \"The majority of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Nomenclature/Operations\",\n    \"title\": \"Operations\"\n  }, \"[[Operations]]\"), \" performed in Vietnam are performed at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Locations/The_FOB\",\n    \"title\": \"The_FOB\"\n  }, \"[[The_FOB]]\"), \" or the forward-operating-base.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{},"outboundReferences":[{"contextLine":"Vietnam is a project involving trips into [[The_Central_Woods]] and its surroundings.","targetAnchor":null,"refWord":"The_Central_Woods","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Central Woods pertains to the general area of woods containing or nearby to:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"The_FOB\",\n    \"title\": \"The_FOB\"\n  }, \"[[The_FOB]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"The_Bog\",\n    \"title\": \"The_Bog\"\n  }, \"[[The_Bog]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"FOB_2\",\n    \"title\": \"FOB_2\"\n  }, \"[[FOB_2]]\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"The_Creek\",\n    \"title\": \"The_Creek\"\n  }, \"[[The_Creek]]\"), \".\"), mdx(\"p\", null, \"Known entities that live in or around The Central Woods are listed in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../Entities/Entities\",\n    \"title\": \"Entities\"\n  }, \"[[Entities]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"badcf462-76c6-530f-b190-fe47ff2d0466","fields":{"slug":"/Projects/Vietnam/Locations/The_Central_Woods","title":"The_Central_Woods"}}}},{"contextLine":"The majority of [[Operations]] performed in Vietnam are performed at [[The_FOB]] or the forward-operating-base.","targetAnchor":null,"refWord":"Operations","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"op\\xB7er\\xB7a\\xB7tion\\n/\\u02CC\\xE4p\\u0259\\u02C8r\\u0101SH(\\u0259)n/\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"noun\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"the fact or condition of functioning or being active\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"an act of surgery performed on a patient.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CONTEXT\"), \"\\nIn the context of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../Vietnam\",\n    \"title\": \"Vietnam\"\n  }, \"[[Vietnam]]\"), \", an operation is any mobilization of the group associated to do just about anything. Basically, fancy word for activity.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"e14f051a-2c4e-5927-b5e7-276efd9b3316","fields":{"slug":"/Projects/Vietnam/Nomenclature/Operations","title":"Operations"}}}},{"contextLine":"The majority of [[Operations]] performed in Vietnam are performed at [[The_FOB]] or the forward-operating-base.","targetAnchor":null,"refWord":"The_FOB","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The FOB or The Forward Operating Base refers to an area under a bridge right across an area of wetlands nicknamed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"The_Bog\",\n    \"title\": \"The_Bog\"\n  }, \"[[The_Bog]]\"), \". The FOB can also apply to any area close by.\"), mdx(\"p\", null, \"The FOB was originally established by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../../People/Shane\",\n    \"title\": \"Shane\"\n  }, \"[[Shane]]\"), \" & \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../../People/Jake\",\n    \"title\": \"Jake\"\n  }, \"[[Jake]]\"), \".\"), mdx(\"p\", null, \"The FOB is the usual area for construction, with its largest project being \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"The_Ditch\",\n    \"title\": \"The_Ditch\"\n  }, \"[[The_Ditch]]\"), \". This is also the location where fires are mostly hosted, as the entire area is covered orange sand.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"4a7e1425-3b84-5203-92d4-b5e596b95c1d","fields":{"slug":"/Projects/Vietnam/Locations/The_FOB","title":"The_FOB"}}}}],"inboundReferences":[{"contextLine":"[[Vietnam]]","referrer":{"parent":{"id":"43c339fc-2ddd-5b81-9ac0-b5b35f34fe45","fields":{"slug":"/Projects/Projects","title":"Projects"}}}},{"contextLine":"In the context of [[Vietnam]], an operation is any mobilization of the group associated to do just about anything. Basically, fancy word for activity.","referrer":{"parent":{"id":"e14f051a-2c4e-5927-b5e7-276efd9b3316","fields":{"slug":"/Projects/Vietnam/Nomenclature/Operations","title":"Operations"}}}}]},"fields":{"slug":"/Projects/Vietnam/Vietnam","title":"Vietnam"}}},"pageContext":{"id":"4b81d857-6c26-5aee-95d9-b1a24048b90b","refWordMdxSlugDict":{"The_Central_Woods":"Projects/Vietnam/Locations/The_Central_Woods","The_FOB":"Projects/Vietnam/Locations/The_FOB","The_Bog":"Projects/Vietnam/Locations/The_Bog","Shane":"People/Shane","Michael":"People/Michael","Ian":"People/Ian","Leon":"People/Leon","Francis":"People/Francis","Jake":"People/Jake","Andrew":"People/Andrew","Music":"Hobbies/Music","Marconi":"People/Marconi","Brayce":"People/Brayce","Eddie":"People/Eddie","Connor":"People/Connor","The_Ditch":"Projects/Vietnam/Locations/The_Ditch","FOB_2":"Projects/Vietnam/Locations/FOB_2","The_Creek":"Projects/Vietnam/Locations/The_Creek","Entities":"Projects/Vietnam/Entities/Entities","Phil":"Projects/Vietnam/Entities/Phil","Raquis":"Projects/Vietnam/Entities/Raquis","The_Viet_Cong":"Projects/Vietnam/Entities/The_Viet_Cong","Chip":"Projects/Vietnam/Entities/Chip","Operations":"Projects/Vietnam/Nomenclature/Operations","Vietnam":"Projects/Vietnam/Vietnam"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}